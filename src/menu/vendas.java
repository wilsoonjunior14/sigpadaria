/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package menu;

import entidades.Estoque;
import entidades.ProdutoFabricado;
import entidades.ProdutoSecundario;
import entidades.VWEstoqueProdutosFabricados;
import entidades.VWEstoqueProdutosSecundarios;
import entidades.Vendas;
import entidades.VendasProdutoFabricado;
import entidades.VendasProdutoSecundario;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login.*;
import util.SalvaHistorico;
/**
 *
 * @author Wilson
 */
public class vendas extends javax.swing.JFrame {
    DefaultTableModel dtm = new DefaultTableModel();
    EntityManager entity = login.entity;
    double totalvenda = 0;
    /**
     * Creates new form vendas
     */
    public vendas() {
        initComponents();
        dtm.setColumnIdentifiers(new String[]{"CÓDIGO","NOME","PREÇO DE VENDA","QUANTIDADE A VENDER","TIPO"});
        tabela.setModel(dtm);
        total.setText("R$0.00");
    }
    
    // VERIFICA SE OS CODIGOS ESTAO NORMAIS
    public boolean verificaCodigoTabela(String codigo){
        int x = tabela.getRowCount();
        for(int i=0;i<x;i++){
            if(tabela.getValueAt(i,0).equals(codigo) || tabela.getValueAt(i,0).equals("")){
                return true;
            }
        }
        return false;
    }
    
    // VERIFICA SE TABELA ESTA DE ACORDO
    public boolean tabeladeAcordo(){
        for(int i=0;i<tabela.getRowCount();i++){
            for(int j=0;j<tabela.getColumnCount();j++){
                if(tabela.getValueAt(i,j).equals("")){
                    return false;
                }
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        codigo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        tabela.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabela);

        jLabel1.setText("Código do Produto:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("VENDAS");

        jButton1.setText("ADICIONAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("REMOVER ITEM");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("REMOVER TUDO");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("FINALIZAR");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("PRODUTOS A VENDER");

        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("TOTAL DA VENDA");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));

        total.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        total.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(codigo))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(153, 153, 153))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{
    String codigoproduto = codigo.getText();
    entity.clear();
    entity.getTransaction().begin();
    
    List<VWEstoqueProdutosFabricados> estoque_PF  = entity.createQuery("SELECT P FROM VWEstoqueProdutosFabricados P WHERE P.codigo = '"+codigoproduto+"'").getResultList();
    // se o produto existir no estoque de produtos fabricados
    if(estoque_PF.size()!=0){
        String VALOR = JOptionPane.showInputDialog(null,"DIGITE QUANTIDADE A VENDER:");
        int quantidade_venda = Integer.parseInt(VALOR);
        // pegando o produto 
        VWEstoqueProdutosFabricados pf = estoque_PF.get(0);
        if(quantidade_venda <= pf.getQuantidade() && !verificaCodigoTabela(codigoproduto)){
            dtm.addRow(new String[]{pf.getCodigo(),pf.getNome(),"R$"+pf.getPreco_venda(),""+quantidade_venda+"","1"});
            totalvenda = totalvenda + (pf.getPreco_venda()*quantidade_venda);
        }else{
            JOptionPane.showMessageDialog(null,"ERRO! \n QUANTIDADE SUPERIOR AO ESTOQUE OU \n PRODUTO JÁ EXISTENTE NA TABELA DE VENDAS");
        }
    }else{
       List<VWEstoqueProdutosSecundarios> estoque_PS = entity.createQuery("SELECT P FROM VWEstoqueProdutosSecundarios P WHERE P.codigo = '"+codigoproduto+"'").getResultList();
       if(estoque_PS.size()!=0){
            String VALOR = JOptionPane.showInputDialog(null,"DIGITE QUANTIDADE A VENDER:");
            int quantidade_venda = Integer.parseInt(VALOR);
            VWEstoqueProdutosSecundarios ps = estoque_PS.get(0);
            if(quantidade_venda <= ps.getQuantidade() && !verificaCodigoTabela(codigoproduto)){
                dtm.addRow(new String[]{ps.getCodigo(),ps.getNome(),"R$"+ps.getPreco_venda(),""+quantidade_venda+"","2"});
                totalvenda = totalvenda + (ps.getPreco_venda()*quantidade_venda);
            }else{
                JOptionPane.showMessageDialog(null,"ERRO! \n QUANTIDADE SUPERIOR AO ESTOQUE \n OU PRODUTO JÁ EXISTENTE NA TABELA DE VENDAS");
            }
       }else{
           JOptionPane.showMessageDialog(null,"PRODUTO INEXISTENTE NO SISTEMA");
       }
    }
    
    entity.getTransaction().commit();
    tabela.setModel(dtm);
    total.setText(DecimalFormat.getCurrencyInstance().format(totalvenda));
  
}catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERRO "+e.getLocalizedMessage());
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
dtm = new DefaultTableModel();
dtm.setColumnIdentifiers(new String[]{"CÓDIGO","NOME","PREÇO DE VENDA","QUANTIDADE A VENDER","TIPO"});
tabela.setModel(dtm);
total.setText(DecimalFormat.getCurrencyInstance().format(0.00));
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
int selectedRow = tabela.getSelectedRow();
if(selectedRow<0){
    JOptionPane.showMessageDialog(null,"POR FAVOR SELECIONE UM ITEM DA TABELA DE VENDAS");
}else{
    double valor_venda_item = Double.parseDouble(tabela.getValueAt(selectedRow,2).toString().replace("R$",""))*Integer.parseInt(tabela.getValueAt(selectedRow,3).toString());
    totalvenda-=valor_venda_item;
    total.setText(DecimalFormat.getCurrencyInstance().format(totalvenda));
    dtm.removeRow(selectedRow);
    tabela.setModel(dtm);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
if(tabeladeAcordo()){
    ArrayList<VendasProdutoFabricado> vendasPF = new ArrayList<VendasProdutoFabricado>();
    ArrayList<VendasProdutoSecundario> vendasPS = new ArrayList<VendasProdutoSecundario>();
    try{
        for(int i=0;i<tabela.getRowCount();i++){
            int tipo = Integer.parseInt(tabela.getValueAt(i,4).toString());
            entity.clear();
            String codigo = tabela.getValueAt(i,0).toString();
            String nome = tabela.getValueAt(i,1).toString();
            double preco_venda = Double.parseDouble(tabela.getValueAt(i,2).toString().replace("R$",""));
            int quantidade_venda = Integer.parseInt(tabela.getValueAt(i,3).toString());
            if(tipo==1){
                entity.getTransaction().begin();
                ProdutoFabricado pf = (ProdutoFabricado) entity.createQuery("SELECT P FROM ProdutoFabricado P WHERE P.codigo='"+codigo+"'").getSingleResult();
                
                Vendas v = new Vendas();
                v.setData(Calendar.getInstance().getTime());
                v.setHora(Calendar.getInstance().getTime());
                v.setValor(pf.getPreco_venda()*quantidade_venda);
                
                VendasProdutoFabricado vpf = new VendasProdutoFabricado();
                vpf.setProdutofabricado(pf);
                vpf.setQuantidade(quantidade_venda);
                vpf.setVendas(v);
                
                vendasPF.add(vpf);
                
            }else if(tipo==2){
                entity.getTransaction().begin();
                ProdutoSecundario ps = (ProdutoSecundario) entity.createQuery("SELECT P FROM ProdutoSecundario P WHERE P.codigo='"+codigo+"'").getSingleResult();
                
                Vendas v = new Vendas();
                v.setData(Calendar.getInstance().getTime());
                v.setHora(Calendar.getInstance().getTime());
                v.setValor(ps.getPreco_venda()*quantidade_venda);
                
                VendasProdutoSecundario vps = new VendasProdutoSecundario();
                vps.setProdutosecundario(ps);
                vps.setQuantidade(quantidade_venda);
                vps.setVendas(v);
                
                vendasPS.add(vps);
            }
            entity.getTransaction().commit();
        }
        
    }catch(Exception e){
        vendasPF.clear();
        vendasPS.clear();
    }
    // QUANTIDADE DE VENDAS PARA CADA TIPO DE PRODUTO
    System.out.println(vendasPF.size());
    System.out.println(vendasPS.size());
    System.out.println("vendas ok! hora de armazená-las");
    
    // salvando as vendas
    try{
        entity.clear();
        for(VendasProdutoFabricado vpf : vendasPF){
            entity.getTransaction().begin();
            
            ProdutoFabricado pf = (ProdutoFabricado) entity.createQuery("SELECT P FROM ProdutoFabricado P WHERE P.id = "+vpf.getProdutofabricado().getId()+"").getSingleResult();
            entity.persist(pf);
            vpf.setProdutofabricado(pf);
            
            entity.persist(vpf.getVendas());

            entity.persist(vpf);
            
            Estoque e = (Estoque) entity.createQuery("SELECT E FROM Estoque E WHERE E.produtofabricado.id = "+vpf.getProdutofabricado().getId()+"").getSingleResult();
            e.setQuantidade(e.getQuantidade() - vpf.getQuantidade());
            
            entity.persist(e);
            
            entity.getTransaction().commit();
            entity.clear();
            new SalvaHistorico().salvar("VENDA EFETUADA DE R$"+vpf.getVendas().getValor());
        }
        
        entity.clear();
        for(VendasProdutoSecundario vps : vendasPS){
            entity.getTransaction().begin();
            
            ProdutoSecundario ps = (ProdutoSecundario) entity.createQuery("SELECT P FROM ProdutoSecundario P WHERE P.id = "+vps.getProdutosecundario().getId()+"").getSingleResult();
            entity.persist(ps);
            vps.setProdutosecundario(ps);
            
            entity.persist(vps.getVendas());
            
            entity.persist(vps);
            
            Estoque e = (Estoque) entity.createQuery("SELECT E FROM Estoque E WHERE E.produtosecundario.id = "+vps.getProdutosecundario().getId()+"").getSingleResult();
            e.setQuantidade(e.getQuantidade() - vps.getQuantidade());
            
            entity.persist(e);
            
            entity.getTransaction().commit();
            new SalvaHistorico().salvar("VENDA EFETUADA DE R$"+vps.getVendas().getValor());
            entity.clear();
        }
        
        JOptionPane.showMessageDialog(null,"VENDA REALIZADA!");
        dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[]{"CÓDIGO","NOME","PREÇO DE VENDA","QUANTIDADE A VENDER","TIPO"});
        tabela.setModel(dtm);
        total.setText(DecimalFormat.getCurrencyInstance().format(0.00));
    }catch(Exception e){
        entity.getTransaction().rollback();
        System.out.println(e.getLocalizedMessage());
    }
    
}else{
    JOptionPane.showMessageDialog(null,"EXISTEM INFORMAÇÕES INVÁLIDAS NA TABELA DE VENDAS");
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField codigo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
