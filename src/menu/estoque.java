/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package menu;

import entidades.Estoque;
import entidades.ProdutoFabricado;
import entidades.ProdutoSecundario;
import entidades.VWEstoqueProdutosFabricados;
import entidades.VWEstoqueProdutosSecundarios;
import entidades.VWProdutosFabricados;
import java.util.List;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import login.*;
/**
 *
 * @author Wilson
 */
public class estoque extends javax.swing.JFrame {
    DefaultTableModel dtm = new DefaultTableModel();
    EntityManager entity = login.entity;
    int tipo = 0;
    
    // PREPARA A TABELA DE PRODUTOS FABRICADOS
    public void tabela_ProdutosFabricados(){
        dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[]{"ID","CÓDIGO","NOME","TIPO","PREÇO DE VENDA","ESTOQUE"});
        entity.clear();
        entity.getTransaction().begin();
        
        List<VWEstoqueProdutosFabricados> estoques  = entity.createQuery("SELECT P FROM VWEstoqueProdutosFabricados P ORDER BY P.nome").getResultList();
        if(estoques.size()<=0){
            JOptionPane.showMessageDialog(null,"NENHUM PRODUTO FABRICADO CADASTRADO NO SISTEMA");
        }else{
            for(VWEstoqueProdutosFabricados e : estoques){
               dtm.addRow(new String[]{""+e.getId()+"",""+e.getCodigo()+"",""+e.getNome()+"",""+e.getDescricao()+"","R$"+e.getPreco_venda()+"",""+e.getQuantidade()+""});
            }
            tabela.setModel(dtm);
        }
        entity.getTransaction().commit();
        tipo = 1;
    }
    
    // PREPARA A TABELA DE PRODUTOS SECUNDÁRIOS
    public void tabela_ProdutosSecundarios(){
        dtm = new DefaultTableModel();
        dtm.setColumnIdentifiers(new String[]{"ID","CÓDIGO","NOME","DESCRIÇÃO","PREÇO DE VENDA","PREÇO DE COMPRA","ESTOQUE"});
        entity.clear();
        entity.getTransaction().begin();
        
        List<VWEstoqueProdutosSecundarios> estoques  = entity.createQuery("SELECT P FROM VWEstoqueProdutosSecundarios P ORDER BY P.nome").getResultList();
        if(estoques.size()<=0){
            JOptionPane.showMessageDialog(null,"NENHUM PRODUTO SECUNDÁRIO CADASTRADO NO SISTEMA");
        }else{
            for(VWEstoqueProdutosSecundarios e : estoques){
               dtm.addRow(new String[]{""+e.getId()+"",""+e.getCodigo()+"",""+e.getNome()+"",""+e.getDescricao()+"","R$"+e.getPreco_venda()+"",
               "R$"+e.getPreco_compra()+"",""+e.getQuantidade()+""});
            }
            tabela.setModel(dtm);
        }
        entity.getTransaction().commit();
        tipo = 2;
    }
    
    // verifica se a tabela está preenchida corretamente
    public boolean tabela_ok(){
        for(int i=0;i<tabela.getRowCount();i++){
            for(int j=0;j<tabela.getColumnCount();j++){
                if(tabela.getValueAt(i,j).equals("")){
                    return false;
                }
            }
        }
        return true;
    }
    
    
    /**
     * Creates new form estoque
     */
    public estoque() {
        initComponents();
        entity.clear();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        legenda = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("PRODUTOS FABRICADOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("PRODUTOS SECUNDÁRIOS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabela);

        legenda.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        legenda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        legenda.setText("TABELA DE PRODUTOS");

        jButton3.setText("SALVAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("REMOVER");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 106, Short.MAX_VALUE)
                        .addComponent(legenda, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(legenda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
tabela_ProdutosFabricados();
legenda.setText("TABELA DE PRODUTOS (PRODUTOS FABRICADOS)");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
tabela_ProdutosSecundarios();
legenda.setText("TABELA DE PRODUTOS (PRODUTOS SECUNDÁRIOS)");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
if(tipo == 1){
    // LISTA DE PRODUTOS FABRICADOS
    if(tabela_ok()){
        
            try{
                for(int i=0;i<tabela.getRowCount();i++){
                    int id = Integer.parseInt(tabela.getValueAt(i,0).toString());
                    String codigo = tabela.getValueAt(i,1).toString();
                    String nome = tabela.getValueAt(i,2).toString();
                    String tipo = tabela.getValueAt(i,3).toString();
                    String preco = tabela.getValueAt(i,4).toString().replace("R$","");
                    int quantidade = Integer.parseInt(tabela.getValueAt(i,5).toString());
                    entity.clear();

                    entity.getTransaction().begin();
                    ProdutoFabricado pf  = (ProdutoFabricado) entity.createQuery("SELECT P FROM ProdutoFabricado P WHERE P.id = "+id+"").getResultList().get(0);
                    pf.setPreco_venda(Double.parseDouble(preco));

                    entity.persist(pf);

                    Estoque est = (Estoque) entity.createQuery("SELECT E FROM Estoque E WHERE E.produtofabricado.id = "+id+"").getResultList().get(0);
                    est.setQuantidade(quantidade);
                    entity.persist(est);
                    entity.getTransaction().commit();
                }
                
                JOptionPane.showMessageDialog(null,"ESTOQUES E PREÇOS ATUALIZADOS!");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"TABELA COM INFORMAÇÕES INVÁLIDAS");
            }
    }else{
        JOptionPane.showMessageDialog(null,"TABELA COM INFORMAÇÕES INVÁLIDAS");
    }
    
}else if(tipo ==2){
    // LISTA DE PRODUTOS SECUNDÁRIOS
   try{
                for(int i=0;i<tabela.getRowCount();i++){
                    int id = Integer.parseInt(tabela.getValueAt(i,0).toString());
                    String codigo = tabela.getValueAt(i,1).toString();
                    String nome = tabela.getValueAt(i,2).toString();
                    String descricao = tabela.getValueAt(i,3).toString();
                    String preco_venda = tabela.getValueAt(i,4).toString().replace("R$","");
                    String preco_compra = tabela.getValueAt(i,5).toString().replace("R$","");
                    int quantidade = Integer.parseInt(tabela.getValueAt(i,6).toString());
                    entity.clear();

                    entity.getTransaction().begin();
                    ProdutoSecundario pf  = (ProdutoSecundario) entity.createQuery("SELECT P FROM ProdutoSecundario P WHERE P.id = "+id+"").getResultList().get(0);
                    pf.setPreco_venda(Double.parseDouble(preco_venda));
                    pf.setPreco_compra(Double.parseDouble(preco_compra));

                    entity.persist(pf);

                    Estoque est = (Estoque) entity.createQuery("SELECT E FROM Estoque E WHERE E.produtosecundario.id = "+id+"").getResultList().get(0);
                    est.setQuantidade(quantidade);
                    entity.persist(est);
                    entity.getTransaction().commit();
                }
                
                JOptionPane.showMessageDialog(null,"ESTOQUES E PREÇOS ATUALIZADOS!");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"TABELA COM INFORMAÇÕES INVÁLIDAS");
            }
}    
        
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel legenda;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
